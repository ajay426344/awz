---
- name: ESXi Pre-check Stage with Dynatrace Monitoring
  hosts: all
  gather_facts: no
  vars:
    ansible_user: root
    ansible_password: "Ajay@426344"
    ansible_connection: ssh
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    # Direct variable access - these will be loaded from group_vars/all.yml automatically
    # dynatrace_url: "{{ dynatrace_url }}"
    # dynatrace_token: "{{ dynatrace_token }}"
  
  tasks:
    - name: Set timestamps
      set_fact:
        current_epoch: "{{ now().strftime('%s') }}"
        current_iso: "{{ now().isoformat() }}"
      run_once: true
      
    - name: Send pre-check start event to Dynatrace
      uri:
        url: "{{ dynatrace_url }}/api/v2/events/ingest"
        method: POST
        headers:
          Authorization: "Api-Token {{ dynatrace_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          eventType: "CUSTOM_INFO"
          title: "ESXi Pre-check Started"
          properties:
            host: "{{ inventory_hostname }}"
            phase: "precheck"
            timestamp: "{{ current_iso }}"
      connection: local
      delegate_to: localhost
      
    - name: Test SSH connectivity
      wait_for_connection:
        timeout: 30
      register: ssh_check
      
    - name: Get ESXi version information
      raw: vmware -v
      register: version_output
      
    - name: Extract build number
      raw: vmware -v | grep -o 'build-[0-9]*' | cut -d'-' -f2
      register: current_build_raw
      
    - name: Check available datastores with free space
      raw: |
        esxcli storage filesystem list | grep -E "VMFS|NFS" | awk '$5+0 > 3 {print $1":"$5":"$6}'
      register: datastore_info
      
    - name: Set host facts
      set_fact:
        host_ssh_status: "{{ 'PASS' if ssh_check.elapsed < 30 else 'FAIL' }}"
        host_current_build: "{{ current_build_raw.stdout | trim }}"
        host_version: "{{ version_output.stdout | trim }}"
        host_datastores: "{{ datastore_info.stdout_lines }}"
        host_selected_datastore: "{{ datastore_info.stdout_lines[0].split(':')[0] if datastore_info.stdout_lines else '/vmfs/volumes/datastore1' }}"
        host_available_space: "{{ datastore_info.stdout_lines[0].split(':')[1] if datastore_info.stdout_lines else '0' }}"
        precheck_timestamp: "{{ current_epoch }}"
        
    - name: Determine pre-check status
      set_fact:
        precheck_passed: "{{ host_ssh_status == 'PASS' and host_available_space|float > 3 }}"
        
    - name: Send pre-check metrics to Dynatrace
      uri:
        url: "{{ dynatrace_url }}/api/v2/metrics/ingest"
        method: POST
        headers:
          Authorization: "Api-Token {{ dynatrace_token }}"
          Content-Type: "text/plain; charset=utf-8"
        body: |
          esxi.patch.precheck.ssh_status,host={{ inventory_hostname }} {{ 1 if host_ssh_status == 'PASS' else 0 }} {{ precheck_timestamp }}
          esxi.patch.precheck.build_number,host={{ inventory_hostname }} {{ host_current_build }} {{ precheck_timestamp }}
          esxi.patch.precheck.datastore_space_gb,host={{ inventory_hostname }} {{ host_available_space }} {{ precheck_timestamp }}
          esxi.patch.precheck.status,host={{ inventory_hostname }} {{ 1 if precheck_passed else 0 }} {{ precheck_timestamp }}
      connection: local
      delegate_to: localhost
      
    - name: Send pre-check completion event to Dynatrace
      uri:
        url: "{{ dynatrace_url }}/api/v2/events/ingest"
        method: POST
        headers:
          Authorization: "Api-Token {{ dynatrace_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          eventType: "{{ 'CUSTOM_INFO' if precheck_passed else 'ERROR' }}"
          title: "ESXi Pre-check {{ 'Passed' if precheck_passed else 'Failed' }}"
          properties:
            host: "{{ inventory_hostname }}"
            phase: "precheck"
            status: "{{ 'passed' if precheck_passed else 'failed' }}"
            current_build: "{{ host_current_build }}"
            available_space_gb: "{{ host_available_space }}"
            ssh_status: "{{ host_ssh_status }}"
      connection: local
      delegate_to: localhost
      
    - name: Display pre-check results
      debug:
        msg:
          - "========================================="
          - "Host: {{ inventory_hostname }}"
          - "SSH Status: {{ host_ssh_status }}"
          - "Current Build: {{ host_current_build }}"
          - "Available Space: {{ host_available_space }}GB"
          - "Pre-check Status: {{ 'PASSED' if precheck_passed else 'FAILED' }}"
          - "========================================="
          
    - name: Save pre-check results
      set_stats:
        data:
          "{{ inventory_hostname }}_precheck": "{{ 'passed' if precheck_passed else 'failed' }}"
          "{{ inventory_hostname }}_build": "{{ host_current_build }}"
          "{{ inventory_hostname }}_datastore": "{{ host_selected_datastore }}"
